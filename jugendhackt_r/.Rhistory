library("ggplot2")
mp <- ggplot() + borders("world", colour="gray50", fill="gray50") + coord_quickmap()
mp
### --------- Places I have seen -----------
places_visited <- c("Berlin", "San Francisco", "Leiden", "Eindhoven",
"Innsbruck", "Munich", "Palo Alto", "La Spezia", "Elba",
"Barcelona", "Lombock", "Bali", "Singapore", "Beijing",
"Shanghai", "Osaka", "Tokyo")
library("ggmap")
lonlat <- geocode(places_visited)
lonlat
my_visits <- data.frame(city = places_visited, lonlat)
whc <- read.csv("whc-sites-2016.csv")
mp_wh <- mp + geom_point(data = whc,
aes(x = longitude, y = latitude,
size = area_hectares, color = category))
library("ggplot2")
######## 1 #############
######## 2 #############
######## 3 #############
######## 4 #############
######## 5 #############
######## 6 #############
mp <- ggplot() + borders("world", colour="gray50", fill="gray50") + coord_quickmap()
mp
### --------- Places I have seen -----------
places_visited <- c("Berlin", "San Francisco", "Leiden", "Eindhoven",
"Innsbruck", "Munich", "Palo Alto", "La Spezia", "Elba",
"Barcelona", "Lombock", "Bali", "Singapore", "Beijing",
"Shanghai", "Osaka", "Tokyo")
library("ggmap")
lonlat <- geocode(places_visited)
lonlat
my_visits <- data.frame(city = places_visited, lonlat)
my_visits
mp_visited <- mp + geom_point(data = my_visits,
aes(x = lon, y = lat))
mp_visited
mp_visited + theme_classic()
mp_visited + theme_void()
library("ggplot2")
mp <- ggplot() + borders("world", colour="gray50", fill="gray50") + coord_quickmap()
mp
## Da war ich schon
places_visited <- c("Berlin", "San Francisco", "Leiden", "Eindhoven",
"Innsbruck", "Munich", "Palo Alto", "La Spezia", "Elba",
"Barcelona", "Lombock", "Bali", "Singapore", "Beijing",
"Shanghai", "Osaka", "Tokyo")
## Wo auf der Welt sind diese Orte?
library("ggmap")
lonlat <- geocode(places_visited)
lonlat
my_visits <- data.frame(city = places_visited, lonlat)
my_visits
mp_visited <- mp + geom_point(data = my_visits,
aes(x = lon, y = lat))
mp_visited
mp_visited + theme_classic()
mp_visited + theme_void()
?geom_density
ggplot(diamonds, aes(carat)) +
geom_density()
ggplot(diamonds, aes(carat, ..count.., fill = cut)) +
geom_density(position = "fill")
ggplot(diamonds, aes(depth, colour = cut)) +
geom_density() +
xlim(55, 70)
??size
??weight
ggplot(data = cats) + geom_density(aes(x = Bwt, fill = Sex), alpha = 0.3)
data(cats)
data(catsM)
data(catsM, package = "boot")
ggplot(data = catsM) + geom_density(aes(x = Bwt, fill = Sex), alpha = 0.3)
summary(catsM)
data(cats, package = "MASS")
ggplot(data = cats) + geom_density(aes(x = Bwt, fill = Sex), alpha = 0.3)
names(cats)
names(cats) <- c("Geschlecht", "Gewicht", "HerzGewicht")
cats$Geschlecht
levels(cats$Geschlecht)
levels(cats$Geschlecht) <- c("W", "M")
?ylab
ggplot(data = cats) +
geom_density(aes(x = Gewicht, fill = Geschlecht), alpha = 0.3) +
ggtitle("Katzen")
theme
ggplot(data = cats) +
geom_density(aes(x = Gewicht, fill = Geschlecht), alpha = 0.3) +
ggtitle("Katzen") +
theme_classic()
ggplot(data = cats) +
geom_density(aes(x = Gewicht, fill = Geschlecht), alpha = 0.3) +
ggtitle("Katzen") +
theme_bw()
?cats
?MASS::cats
ggplot(data = cats) +
geom_point(aes(x = Gewicht, y = Herzgewicht, fill = Geschlecht))
######## 1 #############
data(cats, package = "MASS")
names(cats) <- c("Geschlecht", "Gewicht", "Herzgewicht")
levels(cats$Geschlecht) <- c("W", "M")
ggplot(data = cats) +
geom_density(aes(x = Gewicht, fill = Geschlecht), alpha = 0.3) +
ggtitle("Katzen") +
theme_bw()
######## 2 #############
ggplot(data = cats) +
geom_point(aes(x = Gewicht, y = Herzgewicht, fill = Geschlecht))
geom_point(aes(x = Gewicht, y = Herzgewicht, colour = Geschlecht))
ggplot(data = cats) +
geom_point(aes(x = Gewicht, y = Herzgewicht, colour = Geschlecht))
?geom_point
?geom_violin
ggplot(movies, aes(year, budget)) + geom_violin()
ggplot(movies, aes(year, budget)) +
geom_violin(aes(group = cut_width(year, 10)), scale = "width")
ggplot2movies
require("ggplot2movies")
p <- ggplot(mtcars, aes(factor(cyl), mpg))
p + geom_violin()
library("ggplot2")
data("treepipit", package = "coin")
summary(treepipit)
df <- treepipit
xlab <- "Cover storey"
ylab <- "Number of tree pipits"
p <- qplot(y = counts, x = coverstorey, data = df,
alpha = I(0.2), xlab = xlab, ylab = ylab)
p
p <- ggplot(mpg, aes(class, hwy))
p <- p + geom_boxplot()
p + geom_jitter(width = 0.2)
library("ggplot2")
df <- data.frame(sex = rep(c("F", "M"), each = 200),
weight = round(c(rnorm(200, mean = 55, sd = 5),
rnorm(200, mean = 65, sd = 5))))
p <- ggplot(df, aes(x = weight, fill = sex)) +
geom_density(alpha = 0.5)
p
wmean <- tapply(df$weight, INDEX = df$sex, mean)
wmean
wmeandf <- data.frame(mean_weight = wmean, sex = levels(df$sex))
wmeandf
p + geom_vline(data = wmeandf, aes(xintercept = mean_weight,
color = sex),
linetype="dashed")
?mpg
?geom_bar
ggplot(mpg, aes(x = class)) + geom_bar()
ggplot(mpg, aes(x = class, color = year)) + geom_bar()
mpg$year
mpg$year <- as.factor(mpg$year)
ggplot(mpg, aes(x = class, color = year)) + geom_bar()
ggplot(mpg, aes(x = class, fill = year)) + geom_bar()
ggplot(mpg, aes(x = manufacturer, fill = class)) + geom_bar()
ggplot(mpg, aes(fill = manufacturer, x = class)) + geom_bar()
??taxi
??flight
nycflights13_sqlite(path = NULL)
dplyr::nycflights13_sqlite(path = NULL)
?geom_bar
g <- ggplot(mpg, aes(class))
g + geom_bar(aes(fill = drv))
# You can instead dodge, or fill them
g + geom_bar(aes(fill = drv), position = "dodge")
g + geom_bar(aes(fill = drv), position = "fill")
??grid.arrange
grid.arrange(p1, p2,
p4, p6,
layout_matrix = rbind(c(1, 2, 3), c(4, 4, 4)))
library("ggplot2")
library("gridExtra")
######## 1 #############
data(cats, package = "MASS")
names(cats) <- c("Geschlecht", "Gewicht", "Herzgewicht")
levels(cats$Geschlecht) <- c("W", "M")
p1 <- ggplot(data = cats) +
geom_density(aes(x = Gewicht, fill = Geschlecht), alpha = 0.3) +
ggtitle("Katzen") +
theme_bw()
######## 2 #############
p2 <- ggplot(data = cats) +
geom_point(aes(x = Gewicht, y = Herzgewicht, colour = Geschlecht))
######## 3 #############
p3 <- ggplot(mtcars, aes(factor(cyl), mpg)) +
geom_violin() + theme_classic()
# ggplot(movies, aes(year, budget)) + geom_violin()
# ggplot(movies, aes(year, budget)) +
#   geom_violin(aes(group = cut_width(year, 10)), scale = "width")
######## 4 #############
p4 <- ggplot(mpg, aes(class, hwy)) +
geom_boxplot() + geom_jitter(width = 0.2)
######## 5 #############
p5 <- ggplot(mpg, aes(class)) +
geom_bar(aes(fill = drv), position = "dodge")
######## 6 #############
p6 <- ggplot() + borders("world", colour="gray50", fill="gray50") + coord_quickmap()
grid.arrange(p1, p2,
p4, p6,
layout_matrix = rbind(c(1, 2, 3), c(4, 4, 4)))
?theme
p4
p5
?barplot
require(grDevices) # for colours
tN <- table(Ni <- stats::rpois(100, lambda = 5))
r <- barplot(tN, col = rainbow(20))
#- type = "h" plotting *is* 'bar'plot
lines(r, tN, type = "h", col = "red", lwd = 2)
barplot(tN, space = 1.5, axisnames = FALSE,
sub = "barplot(..., space= 1.5, axisnames = FALSE)")
barplot(VADeaths, plot = FALSE)
barplot(VADeaths, plot = FALSE, beside = TRUE)
mp <- barplot(VADeaths) # default
tot <- colMeans(VADeaths)
text(mp, tot + 3, format(tot), xpd = TRUE, col = "blue")
barplot(VADeaths, beside = TRUE,
col = c("lightblue", "mistyrose", "lightcyan",
"lavender", "cornsilk"),
legend = rownames(VADeaths), ylim = c(0, 100))
title(main = "Death Rates in Virginia", font.main = 4)
install.packages("PASWR")
data(titanic3, library = "PASWR")
library("PASWR")
?titanic3
data(titanic3, library = "PASWR")
?data
data(titanic3, package = "PASWR")
head(titanic3)
data("Titanic")
head(as.data.frame(Titanic))
ggplot(titanic, aes(x = Class, y = Freq)) +
geom_bar()
titanic <- as.data.frame(Titanic)
ggplot(titanic, aes(x = Class, y = Freq)) +
geom_bar()
?geom_bar
ggplot(titanic, aes(x = Class, y = Freq)) +
geom_bar(stat = "identity")
View(titanic)
ggplot(titanic, aes(x = Class, y = Freq, color = Survived)) +
geom_bar(stat = "identity")
ggplot(titanic, aes(x = Class, y = Freq, fill = Survived)) +
geom_bar(stat = "identity")
p5 <- ggplot(mpg, aes(class)) +
geom_bar(aes(fill = drv), position = "dodge") +
facet_grid(~ Sex)
ggplot(titanic, aes(x = Class, y = Freq, fill = Survived)) +
geom_bar(stat = "identity") +
facet_grid(~ Sex)
names(titanic)
names(titanic)
names(titanic) <- c("Klasse", "Geschlecht", "Alter", "Überlebt", "Häufigkeit")
names(titanic) <- c("Klasse", "Geschlecht", "Alter", "Überlebt", "Häufigkeit")
ggplot(titanic, aes(x = Klasse, y = Häufigkeit, fill = Überlebt)) +
geom_bar(stat = "identity") +
facet_grid(~ Geschlecht)
levels(titanic$Geschlecht)
levels(titanic$Geschlecht) <- c("M", "W")
levels(titanic$Klasse)
levels(titanic$Klasse) <- c(1, 2, 3, "Crew")
ggplot(titanic, aes(x = Klasse, y = Häufigkeit, fill = Überlebt)) +
geom_bar(stat = "identity") +
facet_grid(~ Geschlecht)
names(titanic) <- c("Klasse", "Geschlecht", "Alter", "Überlebt", "Häufigkeit")
levels(titanic$Geschlecht) <- c("männlich", "weiblich")
levels(titanic$Klasse) <- c(1, 2, 3, "Crew")
ggplot(titanic, aes(x = Klasse, y = Häufigkeit, fill = Überlebt)) +
geom_bar(stat = "identity") +
facet_grid(~ Geschlecht)
levels(titanic$Überlebt)
levels(titanic$Überlebt) <- c("Nein", "Ja")
ggplot(titanic, aes(x = Klasse, y = Häufigkeit, fill = Überlebt)) +
geom_bar(stat = "identity") +
facet_grid(~ Geschlecht)
?theme
ggplot(data = cats) +
geom_point(aes(x = Gewicht, y = Herzgewicht, colour = Geschlecht)) +
theme_classic() + theme(legend.position = "none")
ggplot(data = cats) +
geom_point(aes(x = Gewicht, y = Herzgewicht, colour = Geschlecht)) +
theme_classic() + theme(legend.position = c(2.5, 15))
ggplot(data = cats) +
geom_point(aes(x = Gewicht, y = Herzgewicht, colour = Geschlecht)) +
theme_classic() + theme(legend.position = c(2.5, 2))
ggplot(data = cats) +
geom_point(aes(x = Gewicht, y = Herzgewicht, colour = Geschlecht)) +
theme_classic() + theme(legend.position = c(0,0))
ggplot(data = cats) +
geom_point(aes(x = Gewicht, y = Herzgewicht, colour = Geschlecht)) +
theme_classic() + theme(legend.position = c(0,2))
ggplot(data = cats) +
geom_point(aes(x = Gewicht, y = Herzgewicht, colour = Geschlecht)) +
theme_classic() + theme(legend.position = c(0,1))
ggplot(data = cats) +
geom_point(aes(x = Gewicht, y = Herzgewicht, colour = Geschlecht)) +
theme_classic() + theme(legend.position = c(0,0.8))
ggplot(data = cats) +
geom_point(aes(x = Gewicht, y = Herzgewicht, colour = Geschlecht)) +
theme_classic() + theme(legend.position = c(0.2,0.8))
ggplot(data = cats) +
geom_density(aes(x = Gewicht, fill = Geschlecht), alpha = 0.3) +
ggtitle("Katzen") +
theme_bw() + theme(legend.position = c(0.8, 0.8))
grid.arrange(p1, p2,
p5, p6,
layout_matrix = rbind(c(1, 2, 3), c(4, 4, 4)))
library("ggplot2")
library("gridExtra")
######## 1 #############
data(cats, package = "MASS")
names(cats) <- c("Geschlecht", "Gewicht", "Herzgewicht")
levels(cats$Geschlecht) <- c("W", "M")
p1 <- ggplot(data = cats) +
geom_density(aes(x = Gewicht, fill = Geschlecht), alpha = 0.3) +
ggtitle("Katzen") +
theme_bw() + theme(legend.position = c(0.8, 0.8))
######## 2 #############
p2 <- ggplot(data = cats) +
geom_point(aes(x = Gewicht, y = Herzgewicht, colour = Geschlecht)) +
theme_classic() + theme(legend.position = c(0.2,0.8))
######## 3 #############
p3 <- ggplot(mtcars, aes(factor(cyl), mpg)) +
geom_violin() + theme_classic()
# ggplot(movies, aes(year, budget)) + geom_violin()
# ggplot(movies, aes(year, budget)) +
#   geom_violin(aes(group = cut_width(year, 10)), scale = "width")
######## 4 #############
p4 <- ggplot(mpg, aes(class, hwy)) +
geom_boxplot() + geom_jitter(width = 0.2)
######## 5 #############
data(titanic3, package = "PASWR")
titanic <- as.data.frame(Titanic)
names(titanic) <- c("Klasse", "Geschlecht", "Alter", "Überlebt", "Häufigkeit")
levels(titanic$Geschlecht) <- c("männlich", "weiblich")
levels(titanic$Klasse) <- c(1, 2, 3, "Crew")
levels(titanic$Überlebt) <- c("Nein", "Ja")
p5 <- ggplot(titanic, aes(x = Klasse, y = Häufigkeit, fill = Überlebt)) +
geom_bar(stat = "identity") +
facet_grid(~ Geschlecht)
######## 6 #############
p6 <- ggplot() + borders("world", colour="gray50", fill="gray50") + coord_quickmap()
grid.arrange(p1, p2,
p5, p6,
layout_matrix = rbind(c(1, 2, 3), c(4, 4, 4)))
?geom_bar
ggplot(titanic, aes(x = Klasse, y = Häufigkeit, fill = Überlebt)) +
geom_bar(stat = "identity", position = "dodge") +
facet_grid(~ Geschlecht)
ggplot(titanic, aes(x = Klasse, y = Häufigkeit, fill = Überlebt)) +
geom_bar(stat = "identity", position = "fill") +
facet_grid(~ Geschlecht)
ggplot(titanic, aes(x = Klasse, y = Häufigkeit, fill = Überlebt)) +
geom_bar(stat = "identity", position = "fill")
ggplot(titanic, aes(x = Klasse, y = Häufigkeit, fill = Überlebt)) +
geom_bar(stat = "identity", position = "fill") +
scale_fill_manual(values = c("#009E73", "#D55E00"))
ggplot(titanic, aes(x = Klasse, y = Häufigkeit, fill = Überlebt)) +
geom_bar(stat = "identity", position = "fill") +
scale_fill_manual(values = c("#D55E00", "#009E73"))
ggplot(titanic, aes(x = Klasse, y = Häufigkeit, fill = Überlebt)) +
geom_bar(stat = "identity", position = "fill") +
scale_fill_manual(values = c("#CC79A7", "#009E73"))
ggplot(data = cats) +
geom_point(aes(x = Gewicht, y = Herzgewicht, colour = Geschlecht)) +
theme_classic() + theme(legend.position = c(0.25, 0.8)) +
scale_color_manual(values = c("#CC79A7", "#009E73"))
ggplot(data = cats) +
geom_density(aes(x = Gewicht, fill = Geschlecht), alpha = 0.3) +
ggtitle("Katzen") +
theme_bw() + theme(legend.position = c(0.7, 0.8)) +
# scale_fill_manual(values = c("#CC79A7", "#009E73"))
scale_fill_brewer(palette="Spectral")
ggplot(data = cats) +
geom_density(aes(x = Gewicht, fill = Geschlecht), alpha = 0.3) +
ggtitle("Katzen") +
theme_bw() + theme(legend.position = c(0.7, 0.8)) +
# scale_fill_manual(values = c("#CC79A7", "#009E73"))
scale_fill_brewer(palette="Set1")
ggplot(data = cats) +
geom_point(aes(x = Gewicht, y = Herzgewicht, colour = Geschlecht)) +
theme_classic() + theme(legend.position = c(0.25, 0.8)) +
# scale_color_manual(values = c("#CC79A7", "#009E73"))
scale_fill_brewer(palette="Set1")
ggplot(data = cats) +
geom_point(aes(x = Gewicht, y = Herzgewicht, colour = Geschlecht)) +
theme_classic() + theme(legend.position = c(0.25, 0.8))
ggplot(data = cats) +
geom_point(aes(x = Gewicht, y = Herzgewicht, colour = Geschlecht)) +
theme_classic() + theme(legend.position = c(0.25, 0.8)) +
# scale_color_manual(values = c("#CC79A7", "#009E73"))
scale_color_brewer(palette="Set1")
ggplot(titanic, aes(x = Klasse, y = Häufigkeit, fill = Überlebt)) +
geom_bar(stat = "identity", position = "fill") +
scale_fill_manual(values = c("#CC79A7", "#009E73"))
ggplot(titanic, aes(x = Klasse, y = Häufigkeit, fill = Überlebt)) +
geom_bar(stat = "identity", position = "fill") +
scale_fill_manual(values = c("#F0E442", "#009E73")) +
ggtitle("Titanic")
library("ggplot2")
mp <- ggplot() + borders("world", colour="gray50", fill="gray50") + coord_quickmap()
mp
## Da war ich schon
places_visited <- c("Berlin", "San Francisco", "Leiden", "Eindhoven",
"Innsbruck", "Munich", "Palo Alto", "La Spezia", "Elba",
"Barcelona", "Lombock", "Bali", "Singapore", "Beijing",
"Shanghai", "Osaka", "Tokyo")
## Wo auf der Welt sind diese Orte?
library("ggmap")
lonlat <- geocode(places_visited)
lonlat
my_visits <- data.frame(city = places_visited, lonlat)
my_visits
mp_visited <- mp + geom_point(data = my_visits,
aes(x = lon, y = lat))
mp_visited
mp_visited + theme_classic()
mp_visited + theme_void()
lonlat
getwd()
myvisits
my_visits
places_visited <- c("Berlin", "San Francisco", "Leiden", "Eindhoven",
"Innsbruck", "Munich", "Palo Alto", "La Spezia", "Elba",
"Barcelona", "Lombock", "Bali", "Singapore", "Beijing",
"Shanghai", "Osaka", "Tokyo")
## Wo auf der Welt sind diese Orte?
library("ggmap")
lonlat <- geocode(places_visited)
lonlat
my_visits <- data.frame(city = places_visited, lonlat)
my_visits
getwd()
save(my_visits, file = "urlaub.rda")
mp <- ggplot() + borders("world", colour="gray50", fill="gray50") + coord_quickmap()
mp
load("urlaub.rda")
load("urlaub.rda")
mp_visited <- mp + geom_point(data = my_visits,
aes(x = lon, y = lat))
mp_visited
mp_visited + theme_classic()
mp_visited + theme_void()
# Software Paket für huebsche Grafiken laden
library("ggplot2")
# Karte erstellen
karte <- ggplot() +
borders("world", colour="gray50", fill="gray50") +
coord_quickmap()
# Karte anzeigen
karte
# Urlaubsdaten laden
load("urlaub.rda")
# Urlaubsdaten auf die Karte plotten
library("ggplot2")
# Karte erstellen
karte <- ggplot() +
borders("world", colour="gray50", fill="gray50") +
coord_quickmap()
# Karte anzeigen
karte
# Urlaubsdaten laden
load("urlaub.rda")
# Urlaubsdaten auf die Karte plotten
karte_urlaub <- karte +
geom_point(data = my_visits, aes(x = lon, y = lat))
# Urlaubskarte anzeigen
karte_urlaub
ggplot() +
borders("world", colour="gray50", fill="gray50")
